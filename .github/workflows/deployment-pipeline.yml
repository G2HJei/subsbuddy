name: Deployment Pipeline

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]

env:
  BUILD_NUMBER: RC.${{ github.run_id }}.${{ github.run_number }}

jobs:
  Build-RC:
    runs-on: ubuntu-latest

    steps:
      # COMMIT STAGE
      ##############
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Commit Stage Tests + Package
        run: mvn -B package

      # ACCEPTANCE STAGE
      ##################
      - name: DockerHub > login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: DockerHub > push (${{ env.BUILD_NUMBER}})
        id: push_with_build_number
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/subs-buddy:${{ env.BUILD_NUMBER }}

      - name: Deploy @ TEST
        run: >
          sshpass -p "${{ secrets.VPS_PASS }}" ssh -o "StrictHostKeyChecking no" root@${{ secrets.VPS_IP }} "
          docker stop subs-buddy || true; 
          docker rm subs-buddy || true; 
          docker image prune -a -f; 
          docker pull ${{ secrets.DOCKER_USERNAME }}/subs-buddy:${{ env.BUILD_NUMBER }}; 
          docker run -d -p 8080:8080 --net docker-internal-bridge --name subs-buddy -e DB_URL=mongodb:27017/subs-buddy ${{ secrets.DOCKER_USERNAME }}/subs-buddy:${{ env.BUILD_NUMBER }}
          "

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.11.0
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Nightwatch.js tests
        env:
          SUBS_BUDDY_URL: ${{ secrets.SUBS_BUDDY_URL }}
        working-directory: ./src/test/nightwatch
        run: |
          npm ci
          sudo apt-get install xvfb
          xvfb-run --auto-servernum npm test -- --env chrome

      # DEPLOY STAGE
      ##############
      - name: DockerHub > promote to RC
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/subs-buddy:${{ env.BUILD_NUMBER }} ${{ secrets.DOCKER_USERNAME }}/subs-buddy:rc
          docker push ${{ secrets.DOCKER_USERNAME }}/subs-buddy:rc
          echo "Release candidate ready to be deployed to PROD environment..."

      # CLEAN UP
      ###########
      - name: Delete build number tag
        if: steps.push_with_build_number.outcome == 'success'
        run: |
          JWT_TOKEN=$(curl --location 'https://hub.docker.com/v2/users/login' --header 'Content-Type: application/json' --data-raw '{"username":"${{ secrets.DOCKER_USERNAME }}", "password":"${{ secrets.DOCKER_PASSWORD }}"}' | jq -r '.token')
          curl --location --request DELETE 'https://hub.docker.com/v2/repositories/${{ secrets.DOCKER_USERNAME }}/subs-buddy/tags/${{ env.BUILD_NUMBER }}' --header "Authorization: JWT $JWT_TOKEN"
